{
	"info": {
		"_postman_id": "6d301dc7-7fe5-4237-80d7-1ea1caf7d1d3",
		"name": "cumulus-regression-admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "tags",
			"item": [
				{
					"name": "GetTag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"color\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"name\", \"description\", \"color\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('TAG_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "705aa05e-0f4a-4647-9824-3b6cbd4db183"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tags/2d64c718-e7af-41c0-be53-035af341c464",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tags",
								"2d64c718-e7af-41c0-be53-035af341c464"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TAG_OBJECT'))",
									"}",
									"",
									"pm.globals.set('TAG_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f34e7745-cbd3-4fc3-8b1c-458c41a47d5f"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tags",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateTag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TAG_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "b9c9c0f4-14d5-4ef0-81e7-dcc2cf61b678"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"2d64c718-e7af-41c0-be53-035af341c464\",\n    \"name\": \"New Tag Name\",\n    \"description\": \"Products represent a forecast updated description\",\n    \"color\": \"2ca25f\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tags/2d64c718-e7af-41c0-be53-035af341c464",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tags",
								"2d64c718-e7af-41c0-be53-035af341c464"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TAG_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "ba325764-0a29-421a-8a1b-2828da5d4670"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Preferred\",\n        \"description\": \"Preferred Product for a Given Parameter\",\n        \"color\": \"A7F3D0\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tags",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteTag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "5ee5630e-ee51-4653-9b34-46095346ae88"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"757c809c-dda0-412b-9831-cb9bd0f62d1d\",\n    \"slug\": \"nohrsc-snodas-swe\",\n    \"tags\": [\n        \"57bda84f-ecec-4cd7-b3b1-c0c36f838a05\"\n    ],\n    \"name\": \"New Name for NOHRSC SNODAS SWE\",\n    \"temporal_resolution\": 86400,\n    \"temporal_duration\": 0,\n    \"dss_fpart\": \"SNODAS\",\n    \"parameter_id\": \"683a55b9-4a94-46b5-9f47-26e66f3037a8\",\n    \"parameter\": \"SWE\",\n    \"unit_id\": \"e245d39f-3209-4e58-bfb7-4eae94b3f8dd\",\n    \"unit\": \"MM\",\n    \"description\": \"New Description for NOHRSC SNODAS SWE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tags/2d64c718-e7af-41c0-be53-035af341c464",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tags",
								"2d64c718-e7af-41c0-be53-035af341c464"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "units",
			"item": [
				{
					"name": "GetUnit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"abbreviation\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"name\", \"abbreviation\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('UNIT_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3d64e93d-8301-4350-874d-87fe8c62a0db"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/units/e245d39f-3209-4e58-bfb7-4eae94b3f8dd",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units",
								"e245d39f-3209-4e58-bfb7-4eae94b3f8dd"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListUnits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('UNIT_OBJECT'))",
									"}",
									"",
									"pm.globals.set('UNIT_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "ad409b3d-3b47-4cbc-8988-1ca415c56962"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/units",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateUnit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('UNIT_OBJECT'))",
									"    )",
									"});",
									"",
									"let jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"new_create_unit_id\", jsonData.id);"
								],
								"type": "text/javascript",
								"id": "bd17b350-542c-4be5-8975-4a7029382cd9"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Telsa\",\n        \"description\": \"Magnetic Field\",\n        \"abbreviation\": \"(T)\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/units",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateUnit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('UNIT_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "d0f1c6ee-78b1-43a4-abe0-d93f54156da8"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{new_create_unit_id}}\",\n    \"name\": \"Tesla - UPDATED\",\n    \"abbreviation\": \"(T) - UPDATED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/units/{{new_create_unit_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units",
								"{{new_create_unit_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUnit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "59d04eb3-35b9-40ca-b4ce-0a6c0f10b297"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{new_create_unit_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/units/{{new_create_unit_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units",
								"{{new_create_unit_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "suites",
			"item": [
				{
					"name": "GetSuite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"name\", \"slug\", \"description\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('SUITE_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "b90b6f64-1855-4333-a27f-f7116c056c20"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/suites/c133e9e7-ddc8-4a98-82d7-880d5db35060",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"suites",
								"c133e9e7-ddc8-4a98-82d7-880d5db35060"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListSuites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('SUITE_OBJECT'))",
									"}",
									"",
									"pm.globals.set('SUITE_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "e313c4cc-ffba-45d0-9bb9-04e48b3eff1e"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/suites",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"suites"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateSuite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('SUITE_OBJECT'))",
									"    )",
									"});",
									"",
									"let jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"new_create_suite_id\", jsonData.id);"
								],
								"type": "text/javascript",
								"id": "51c2edd1-a123-4be2-85f2-11bb2e4086bd"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Regression Test Suite\",\n        \"slug\": \"rts\",\n        \"description\": \"New Test Suite\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/suites",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"suites"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateSuite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('SUITE_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "c03f82dd-ffcd-4d0b-a2f7-0279580f7ffd"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{new_create_suite_id}}\",\n    \"name\": \"Regression Test Suite - UPDATED\",\n    \"slug\": \"rts-updated\",\n    \"description\": \"New Test Suite - Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/suites/{{new_create_suite_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"suites",
								"{{new_create_suite_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteSuite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "04888cab-fe9f-40ad-85bf-9450f910df37"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{new_create_suite_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/suites/{{new_create_suite_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"suites",
								"{{new_create_suite_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "parameters",
			"item": [
				{
					"name": "GetParameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"name\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PARAMETER_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "7f486b76-f378-4b6b-b957-8fb30bd78053"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/parameters/5fab39b9-90ba-482a-8156-d863ad7c45ad",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"parameters",
								"5fab39b9-90ba-482a-8156-d863ad7c45ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListParameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PARAMETER_OBJECT'))",
									"}",
									"",
									"pm.globals.set('PARAMETER_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "b1d4e8db-7d6d-4f51-bfd6-d09669ea890e"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/parameters",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"parameters"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateParameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PARAMETER_OBJECT'))",
									"    )",
									"});",
									"",
									"let jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"new_create_parameter_id\", jsonData.id);"
								],
								"type": "text/javascript",
								"id": "f53624d9-e2f2-4cc3-8963-dce9aef27aa1"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Regression Test Parameter 1\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/parameters",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"parameters"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateParameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PARAMETER_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "1fa43059-2f5e-4bdb-86dc-9105eb7fc776"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{new_create_parameter_id}}\",\n    \"name\": \"Regression Test Parameter 1 - UPDATED\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/parameters/{{new_create_parameter_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"parameters",
								"{{new_create_parameter_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteParameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "116ad208-ce77-488b-ace9-6c116787ed99"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{new_create_parameter_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/parameters/{{new_create_parameter_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"parameters",
								"{{new_create_parameter_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "acquirables",
			"item": [
				{
					"name": "ListAcquirables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "30f6863c-1cab-4f67-8098-3d01dd6ed544"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/acquirables",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"acquirables"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateAcquirablefile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "aba811f4-928c-4a8f-b7f3-f6888980dffc"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"datetime\": \"2014-01-01T00:00:00Z\",\n    \"file\": \"cumulus/nohrsc_snodas_unmasked/SNODAS_unmasked_20140101.tar\",\n    \"acquirable_id\": \"87819ceb-72ee-496d-87db-70eb302302dc\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/acquirablefiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"acquirablefiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListAcquirablefiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "754f6174-79d5-4305-bb76-8621057b9c66"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/acquirables/87819ceb-72ee-496d-87db-70eb302302dc/files?after=2010-03-29&before=2030-01-01",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"acquirables",
								"87819ceb-72ee-496d-87db-70eb302302dc",
								"files"
							],
							"query": [
								{
									"key": "after",
									"value": "2010-03-29"
								},
								{
									"key": "before",
									"value": "2030-01-01"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "4a7d6abb-9bb2-4269-9469-54aa3abb764c"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "4815fc8f-6e36-4f83-aa2d-7497f2fa14b2"
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "products",
			"item": [
				{
					"name": "GetProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"tags\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"temporal_resolution\": { \"type\": \"number\" },",
									"        \"temporal_duration\": { \"type\": \"number\" },",
									"        \"dss_fpart\": { \"type\": \"string\" },",
									"        \"parameter_id\": { \"type\": \"string\" },",
									"        \"parameter\": { \"type\": \"string\" },",
									"        \"unit_id\": { \"type\": \"string\" },",
									"        \"unit\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"after\": {\"type\": [\"null\", \"string\"]},",
									"        \"before\": {\"type\": [\"null\", \"string\"]},",
									"        \"productfile_count\": {\"type\": \"number\"},",
									"        \"suite_id\" : { \"type\": \"string\"},",
									"        \"suite\" : { \"type\": \"string\"},",
									"        \"label\" : { \"type\": [\"null\", \"string\"]}",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"tags\", \"name\", \"temporal_resolution\", \"temporal_duration\", \"dss_fpart\",",
									"                 \"parameter_id\", \"parameter\", \"unit_id\", \"unit\", \"suite_id\", \"suite\", \"description\", \"after\", \"before\", \"productfile_count\"",
									"    ],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PRODUCT_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "fbfaf51e-a491-4d52-aa91-8318540181ea"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProducts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PRODUCT_OBJECT'))",
									"}",
									"",
									"pm.globals.set('PRODUCT_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "64a8aa16-7576-45ec-a6df-fc4f9cd1a101"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProductFiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": { ",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\"},",
									"            \"datetime\": { \"type\": \"string\"},",
									"            \"file\": { \"type\": \"string\"}",
									"        },",
									"        \"required\": [\"id\", \"datetime\", \"file\"],",
									"        \"additionalProperties\": false",
									"    }",
									"}",
									"",
									"pm.globals.set('PRODUCTFILE_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3ec7cada-d820-4fa3-b7c1-8f92b4fe9a45"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d/files?after=2020-01-01&before=2020-02-01",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d",
								"files"
							],
							"query": [
								{
									"key": "after",
									"value": "2020-01-01"
								},
								{
									"key": "before",
									"value": "2020-02-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProductAvailability",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"product_id\":  { \"type\": \"string\"},",
									"        \"date_counts\": { ",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"date\": {\"type\": \"string\" },",
									"                    \"count\": {\"type\": \"number\"}",
									"                },",
									"                \"required\": [\"date\", \"count\"],",
									"                \"additionalProperties\": false",
									"            }",
									"        }",
									"    },",
									"    \"required\": [\"product_id\", \"date_counts\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "192ef4cf-068a-4aa7-990f-27a118944a62"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d/availability",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d",
								"availability"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PRODUCT_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a3191fe1-fec5-4508-815a-28c97d19ba2c"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"TEST-LABEL\",\n    \"temporal_resolution\": 200,\n    \"temporal_duration\": 0,\n    \"dss_fpart\": \"INTEGRATION TEST PRODUCT\",\n    \"parameter_id\": \"683a55b9-4a94-46b5-9f47-26e66f3037a8\",\n    \"unit_id\": \"e245d39f-3209-4e58-bfb7-4eae94b3f8dd\",\n    \"description\": \"Example Product Description\",\n    \"suite_id\": \"c133e9e7-ddc8-4a98-82d7-880d5db35060\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PRODUCT_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2c10518e-52f8-4970-8039-b80bd602b625"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"757c809c-dda0-412b-9831-cb9bd0f62d1d\",\n    \"label\": \"UPDATED LABEL\",\n    \"slug\": \"nohrsc-snodas-swe\",\n    \"tags\": [\n        \"57bda84f-ecec-4cd7-b3b1-c0c36f838a05\"\n    ],\n    \"name\": \"New Name for NOHRSC SNODAS SWE\",\n    \"temporal_resolution\": 86400,\n    \"temporal_duration\": 0,\n    \"dss_fpart\": \"SNODAS\",\n    \"parameter_id\": \"683a55b9-4a94-46b5-9f47-26e66f3037a8\",\n    \"parameter\": \"SWE\",\n    \"unit_id\": \"e245d39f-3209-4e58-bfb7-4eae94b3f8dd\",\n    \"unit\": \"MM\",\n    \"description\": \"New Description for NOHRSC SNODAS SWE\",\n    \"suite_id\": \"c133e9e7-ddc8-4a98-82d7-880d5db35060\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d"
							]
						}
					},
					"response": []
				},
				{
					"name": "TagProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PRODUCT_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "5d629d2d-a709-484a-acc5-b0893199c450"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Product Created by Integration Tests\",\n    \"temporal_resolution\": 200,\n    \"temporal_duration\": 0,\n    \"dss_fpart\": \"INTEGRATION TEST PRODUCT\",\n    \"parameter_id\": \"683a55b9-4a94-46b5-9f47-26e66f3037a8\",\n    \"parameter\": \"SWE\",\n    \"unit_id\": \"e245d39f-3209-4e58-bfb7-4eae94b3f8dd\",\n    \"unit\": \"MM\",\n    \"description\": \"Example Product Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d/tags/cc93b3f9-fbe1-4b35-8f9c-2d1515961c6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d",
								"tags",
								"cc93b3f9-fbe1-4b35-8f9c-2d1515961c6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "UntagProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PRODUCT_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "0e98db76-5a70-4e10-9239-3afb9b6b9292"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Product Created by Integration Tests\",\n    \"temporal_resolution\": 200,\n    \"temporal_duration\": 0,\n    \"dss_fpart\": \"INTEGRATION TEST PRODUCT\",\n    \"parameter_id\": \"683a55b9-4a94-46b5-9f47-26e66f3037a8\",\n    \"parameter\": \"SWE\",\n    \"unit_id\": \"e245d39f-3209-4e58-bfb7-4eae94b3f8dd\",\n    \"unit\": \"MM\",\n    \"description\": \"Example Product Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d/tags/cc93b3f9-fbe1-4b35-8f9c-2d1515961c6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d",
								"tags",
								"cc93b3f9-fbe1-4b35-8f9c-2d1515961c6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "996a1e87-dcac-427f-8fcb-73829fdaac86"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"757c809c-dda0-412b-9831-cb9bd0f62d1d\",\n    \"slug\": \"nohrsc-snodas-swe\",\n    \"tags\": [\n        \"57bda84f-ecec-4cd7-b3b1-c0c36f838a05\"\n    ],\n    \"name\": \"New Name for NOHRSC SNODAS SWE\",\n    \"temporal_resolution\": 86400,\n    \"temporal_duration\": 0,\n    \"dss_fpart\": \"SNODAS\",\n    \"parameter_id\": \"683a55b9-4a94-46b5-9f47-26e66f3037a8\",\n    \"parameter\": \"SWE\",\n    \"unit_id\": \"e245d39f-3209-4e58-bfb7-4eae94b3f8dd\",\n    \"unit\": \"MM\",\n    \"description\": \"New Description for NOHRSC SNODAS SWE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d"
							]
						}
					},
					"response": []
				},
				{
					"name": "UndeleteProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PRODUCT_OBJECT'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3ee24d4f-e3b6-4595-8ef5-ad1c7db45668"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"757c809c-dda0-412b-9831-cb9bd0f62d1d\",\n    \"slug\": \"nohrsc-snodas-swe\",\n    \"tags\": [\n        \"57bda84f-ecec-4cd7-b3b1-c0c36f838a05\"\n    ],\n    \"name\": \"New Name for NOHRSC SNODAS SWE\",\n    \"temporal_resolution\": 86400,\n    \"temporal_duration\": 0,\n    \"dss_fpart\": \"SNODAS\",\n    \"parameter_id\": \"683a55b9-4a94-46b5-9f47-26e66f3037a8\",\n    \"parameter\": \"SWE\",\n    \"unit_id\": \"e245d39f-3209-4e58-bfb7-4eae94b3f8dd\",\n    \"unit\": \"MM\",\n    \"description\": \"New Description for NOHRSC SNODAS SWE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/757c809c-dda0-412b-9831-cb9bd0f62d1d/undelete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d",
								"undelete"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "downloads",
			"item": [
				{
					"name": "ListDownloads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "2e3aaefe-3bea-40ad-9007-e59f640ad379"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"datetime_start\": \"2020-12-01T01:00:00Z\",\n\t\"datetime_end\": \"2020-12-10T01:00:00Z\",\n\t\"watershed_id\": \"3e8db268-d9ca-47ec-ae93-21a3c2bcf0a1\",\n\t\"product_id\": [\n        \"30a6d443-80a5-49cc-beb0-5d3a18a84caa\"\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/downloads",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"downloads"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDownload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "18a27c4a-01ac-428e-8ca9-278076e73db2"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"datetime_start\": \"2020-12-01T01:00:00Z\",\n\t\"datetime_end\": \"2020-12-10T01:00:00Z\",\n\t\"watershed_id\": \"3e8db268-d9ca-47ec-ae93-21a3c2bcf0a1\",\n\t\"product_id\": [\n        \"30a6d443-80a5-49cc-beb0-5d3a18a84caa\"\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/downloads",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"downloads"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDownloadAirtemp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "1f1be68b-e75d-4b29-ba27-979571b2bf08"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"datetime_start\": \"2020-11-18T06:00:00Z\",\n\t\"datetime_end\": \"2020-12-02T06:00:00Z\",\n\t\"watershed_id\": \"f019ffec-e9d3-48e6-ab74-eaa8fd8065e0\",\n\t\"product_id\": [\n\t\t\"e4fdadc7-5532-4910-9ed7-3c3690305d86\"\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/downloads",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"downloads"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "watersheds",
			"item": [
				{
					"name": "ListWatersheds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "dd2524e6-ebe5-4523-a428-5610c21f9107"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/watersheds",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetWatershed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "1da88c91-1160-410a-8f94-11856941ce76"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/watersheds/c785f4de-ab17-444b-b6e6-6f1ad16676e8",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"c785f4de-ab17-444b-b6e6-6f1ad16676e8"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateWatershed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "cd935230-de7f-4528-b839-a01c8271df37"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Test Watershed\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/watersheds",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateWatershed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "30cfbfbd-d6ab-4e47-acca-2b681a146678"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"c785f4de-ab17-444b-b6e6-6f1ad16676e8\",\n    \"slug\": \"cumberland-basin-river\",\n    \"name\": \"Cumberland River Basin Updated Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/watersheds/c785f4de-ab17-444b-b6e6-6f1ad16676e8",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"c785f4de-ab17-444b-b6e6-6f1ad16676e8"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteWatershed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "c1953f05-a424-4153-9e06-33067e6df734"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"c785f4de-ab17-444b-b6e6-6f1ad16676e8\",\n    \"slug\": \"cumberland-basin-river\",\n    \"name\": \"Cumberland River Basin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/watersheds/c785f4de-ab17-444b-b6e6-6f1ad16676e8",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"c785f4de-ab17-444b-b6e6-6f1ad16676e8"
							]
						}
					},
					"response": []
				},
				{
					"name": "UndeleteWatershed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "b22921b9-0de1-418c-bab8-1ef037775922"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"c785f4de-ab17-444b-b6e6-6f1ad16676e8\",\n    \"slug\": \"cumberland-basin-river\",\n    \"name\": \"Cumberland River Basin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/watersheds/c785f4de-ab17-444b-b6e6-6f1ad16676e8/undelete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"c785f4de-ab17-444b-b6e6-6f1ad16676e8",
								"undelete"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "area_group",
			"item": [
				{
					"name": "EnableAreaGroupProductStatistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "cb865bb9-f49d-44dc-866d-7da274f1b8a1"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/watersheds/ad30f178-afc3-43b9-ba92-7bd139581217/area_groups/e3fd63a1-f19f-4bf3-b436-1c7086b7afe7/products/757c809c-dda0-412b-9831-cb9bd0f62d1d/statistics/enable",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"ad30f178-afc3-43b9-ba92-7bd139581217",
								"area_groups",
								"e3fd63a1-f19f-4bf3-b436-1c7086b7afe7",
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d",
								"statistics",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "DisableAreaGroupProductStatistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "d02eb91b-7aa4-46f7-81e6-0ac2ce79aefc"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/watersheds/ad30f178-afc3-43b9-ba92-7bd139581217/area_groups/e3fd63a1-f19f-4bf3-b436-1c7086b7afe7/products/757c809c-dda0-412b-9831-cb9bd0f62d1d/statistics/disable",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"ad30f178-afc3-43b9-ba92-7bd139581217",
								"area_groups",
								"e3fd63a1-f19f-4bf3-b436-1c7086b7afe7",
								"products",
								"757c809c-dda0-412b-9831-cb9bd0f62d1d",
								"statistics",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListWatershedAreaGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "d7960428-75ad-4d14-aa65-be676cc9c2cd"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/watersheds/c785f4de-ab17-444b-b6e6-6f1ad16676e8/area_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"c785f4de-ab17-444b-b6e6-6f1ad16676e8",
								"area_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListAreaGroupAreas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "dfe3ea5f-e921-4a17-ab3a-616b65d562c7"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/watersheds/c785f4de-ab17-444b-b6e6-6f1ad16676e8/area_groups/e3fd63a1-f19f-4bf3-b436-1c7086b7afe7/areas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"watersheds",
								"c785f4de-ab17-444b-b6e6-6f1ad16676e8",
								"area_groups",
								"e3fd63a1-f19f-4bf3-b436-1c7086b7afe7",
								"areas"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_existing_admin}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "c0dc303c-dbe3-4ca6-abc1-22d01f3e637a"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "5328cc48-600f-4648-aeb4-b4686487d558"
			}
		}
	],
	"protocolProfileBehavior": {}
}