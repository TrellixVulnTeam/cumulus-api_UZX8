# name: API and Packager

# on:
#   push:
#     branches: [develop]

# jobs:

#   GoAPI:
#     name: Build Go API
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set up Go 1.13
#         uses: actions/setup-go@v1
#         with:
#           go-version: 1.13
#         id: go

#       - name: Check out code into the Go module directory
#         uses: actions/checkout@v2

#       - name: Build and Package for Lambda
#         run: cd api && make package

#       - name: Deploy to Development
#         env:
#           AWS_DEFAULT_REGION: ${{ secrets.RSGISCI_AWS_DEFAULT_REGION }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.RSGISCI_AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.RSGISCI_AWS_SECRET_ACCESS_KEY }}
#         run: make deploy

#   PackagerDockerImage:
#     name: Packager Container Image
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
    
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.RSGISCI_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.RSGISCI_AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.RSGISCI_AWS_DEFAULT_REGION }}
    
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR (cumulus-packager)
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: cumulus-packager
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest async_packager
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

#       - name: Logout of Amazon ECR
#         if: always()
#         run: docker logout ${{ steps.login-ecr.outputs.registry }}


#   ListenerDockerImage:
#     name: Listener Container Image
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
    
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.RSGISCI_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.RSGISCI_AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.RSGISCI_AWS_DEFAULT_REGION }}
    
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR (cumulus-packager)
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: cumulus-listener
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest async_listener
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

#       - name: Logout of Amazon ECR
#         if: always()
#         run: docker logout ${{ steps.login-ecr.outputs.registry }}
